import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

export const runtime = "nodejs";

function isEmail(v: string) {
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v);
}

export async function POST(req: Request) {
  try {
    const { name, email, message } = await req.json();

    // validate
    if (
      typeof name !== "string" ||
      typeof email !== "string" ||
      typeof message !== "string" ||
      name.trim().length < 2 ||
      !isEmail(email) ||
      message.trim().length < 4
    ) {
      return NextResponse.json({ error: "Invalid input" }, { status: 400 });
    }

    // env checks
    const host = process.env.SMTP_HOST;
    const port = Number(process.env.SMTP_PORT ?? 465);
    const user = process.env.SMTP_USER;
    const pass = process.env.SMTP_PASS;
    const from = process.env.CONTACT_FROM;
    const to = process.env.CONTACT_TO;

    if (!host || !user || !pass || !from || !to) {
      console.error("Missing SMTP env vars");
      return NextResponse.json(
        { error: "Server not configured" },
        { status: 500 }
      );
    }

    const transporter = nodemailer.createTransport({
      host,
      port,
      secure: port === 465, // true for 465
      auth: { user, pass },
    });

    await transporter.sendMail({
      from, // e.g. 'Portfolio <noreply@yourdomain.com>'
      to, // your inbox
      replyTo: email, // replies go to the sender
      subject: `New message from ${name}`,
      text: message,
    });

    return NextResponse.json({ ok: true });
  } catch (err) {
    console.error("Contact route error:", err);
    return NextResponse.json({ error: "Send failed" }, { status: 500 });
  }
}
